// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
import {
  ArgsType,
  Field as TypeGraphQLField,
  Float,
  ID,
  InputType as TypeGraphQLInputType,
  Int
} from 'type-graphql';
import { registerEnumType } from 'type-graphql';

// tslint:disable-next-line:no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');

import { BaseWhereInput, PaginationArgs } from 'warthog';
import { UserStatus } from '../src/modules/users/user.model';
import { User } from '../src/modules/users/user.model';

export enum UserOrderByEnum {
  createdAt_ASC = 'createdAt_ASC',
  createdAt_DESC = 'createdAt_DESC',

  updatedAt_ASC = 'updatedAt_ASC',
  updatedAt_DESC = 'updatedAt_DESC',

  deletedAt_ASC = 'deletedAt_ASC',
  deletedAt_DESC = 'deletedAt_DESC',

  email_ASC = 'email_ASC',
  email_DESC = 'email_DESC',

  password_ASC = 'password_ASC',
  password_DESC = 'password_DESC',

  roles_ASC = 'roles_ASC',
  roles_DESC = 'roles_DESC',

  firstName_ASC = 'firstName_ASC',
  firstName_DESC = 'firstName_DESC',

  lastName_ASC = 'lastName_ASC',
  lastName_DESC = 'lastName_DESC',

  status_ASC = 'status_ASC',
  status_DESC = 'status_DESC'
}

registerEnumType(UserOrderByEnum, {
  name: 'UserOrderByInput'
});

@TypeGraphQLInputType()
export class UserWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  email_eq?: string;

  @TypeGraphQLField({ nullable: true })
  email_contains?: string;

  @TypeGraphQLField({ nullable: true })
  email_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  email_endsWith?: string;

  @TypeGraphQLField(type => [String], { nullable: true })
  email_in?: string[];

  @TypeGraphQLField({ nullable: true })
  password_eq?: string;

  @TypeGraphQLField({ nullable: true })
  password_contains?: string;

  @TypeGraphQLField({ nullable: true })
  password_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  password_endsWith?: string;

  @TypeGraphQLField(type => [String], { nullable: true })
  password_in?: string[];

  @TypeGraphQLField({ nullable: true })
  roles_eq?: string;

  @TypeGraphQLField({ nullable: true })
  roles_contains?: string;

  @TypeGraphQLField({ nullable: true })
  roles_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  roles_endsWith?: string;

  @TypeGraphQLField(type => [String], { nullable: true })
  roles_in?: string[];

  @TypeGraphQLField({ nullable: true })
  firstName_eq?: string;

  @TypeGraphQLField({ nullable: true })
  firstName_contains?: string;

  @TypeGraphQLField({ nullable: true })
  firstName_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  firstName_endsWith?: string;

  @TypeGraphQLField(type => [String], { nullable: true })
  firstName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  lastName_eq?: string;

  @TypeGraphQLField({ nullable: true })
  lastName_contains?: string;

  @TypeGraphQLField({ nullable: true })
  lastName_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  lastName_endsWith?: string;

  @TypeGraphQLField(type => [String], { nullable: true })
  lastName_in?: string[];

  @TypeGraphQLField(type => UserStatus, { nullable: true })
  status_eq?: UserStatus;

  @TypeGraphQLField(type => [UserStatus], { nullable: true })
  status_in?: UserStatus[];
}

@TypeGraphQLInputType()
export class UserWhereUniqueInput {
  @TypeGraphQLField(type => String, { nullable: true })
  id?: string;

  @TypeGraphQLField(type => String, { nullable: true })
  email?: string;
}

@TypeGraphQLInputType()
export class UserCreateInput {
  @TypeGraphQLField({ nullable: true })
  email?: string;

  @TypeGraphQLField({ nullable: true })
  password?: string;

  @TypeGraphQLField({ nullable: true })
  roles?: string;

  @TypeGraphQLField({ nullable: true })
  firstName?: string;

  @TypeGraphQLField({ nullable: true })
  lastName?: string;

  @TypeGraphQLField(type => UserStatus)
  status!: UserStatus;
}

@TypeGraphQLInputType()
export class UserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  email?: string;

  @TypeGraphQLField({ nullable: true })
  password?: string;

  @TypeGraphQLField({ nullable: true })
  roles?: string;

  @TypeGraphQLField({ nullable: true })
  firstName?: string;

  @TypeGraphQLField({ nullable: true })
  lastName?: string;

  @TypeGraphQLField(type => UserStatus, { nullable: true })
  status?: UserStatus;
}

@ArgsType()
export class UserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(type => UserWhereInput, { nullable: true })
  where?: UserWhereInput;

  @TypeGraphQLField(type => UserOrderByEnum, { nullable: true })
  orderBy?: UserOrderByEnum;
}

@ArgsType()
export class UserCreateManyArgs {
  @TypeGraphQLField(type => [UserCreateInput])
  data!: UserCreateInput[];
}

@ArgsType()
export class UserUpdateArgs {
  @TypeGraphQLField() data!: UserUpdateInput;
  @TypeGraphQLField() where!: UserWhereUniqueInput;
}
