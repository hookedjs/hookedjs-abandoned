{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/briandombrowski/Dev/Node/hookedjs/hookedjs/services/react/modules/ContactForm.tsx\";\nimport React from \"react\";\nimport { Box, Button } from \"rebass\";\nimport { observable, reaction, set, toJS } from \"mobx\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport isEmail from 'validator/lib/isEmail'; // import {Axios} from \"~/core/data/Axios\";\n\nimport { MobxPersist } from \"../polyfills/MobxPersist\";\nimport { SuccessIcon } from \"../primitives/SuccessIcon\";\nimport { LeadProfile } from \"../state/LeadProfile\";\nimport { Loading } from \"./Loading\";\nexport var state = observable({\n  form: {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  },\n  submitted: false,\n  loading: false,\n  errors: []\n});\nMobxPersist(\"ContactFormState\", state).then(function () {\n  // Keep form up to date with lead intel\n  set(state.form, _objectSpread({}, state.form, {\n    name: LeadProfile.name,\n    email: LeadProfile.email\n  }));\n  reaction(function () {\n    return toJS(LeadProfile);\n  }, function () {\n    set(state.form, _objectSpread({}, state.form, {\n      name: LeadProfile.name,\n      email: LeadProfile.email\n    }));\n  });\n});\nexport var ContactForm = observer(function (_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _state = useObservable(state);\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var optionalFields, errors;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // Cheap validation TODO: Implement full validation\n\n              optionalFields = [];\n              errors = _Object$entries(_state.form).filter(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                    key = _ref4[0],\n                    value = _ref4[1];\n\n                return !value && !optionalFields.includes(key);\n              }).map(function (_ref5) {\n                var _ref6 = _slicedToArray(_ref5, 2),\n                    key = _ref6[0],\n                    value = _ref6[1];\n\n                return key;\n              });\n              if (!isEmail(_state.form.email)) errors.push(\"email\"); // @ts-ignore: Ingore unset type for now\n\n              if (!errors.length) {\n                _context.next = 7;\n                break;\n              }\n\n              _state.errors = errors;\n              return _context.abrupt(\"return\");\n\n            case 7:\n              set(_state, _objectSpread({}, _state, {\n                errors: [],\n                loading: true\n              })); // Update LeadProfile\n\n              set(LeadProfile, _objectSpread({}, LeadProfile, {\n                name: _state.form.name,\n                email: _state.form.email\n              })); // TODO: post to api\n              // Axios.post(\"/feedback\", _state.form)\n              //   .then(function(response) {\n              //     set(_state, {\n              //       submitted: true,\n              //       loading: false,\n              //       form: {\n              //         ..._state.form,\n              //         message: \"\",\n              //         reason: \"\",\n              //       },\n              //     });\n              //   })\n              //   .catch(function(error) {\n              //     set(_state, {\n              //       loading: false,\n              //     });\n              //   });\n\n              set(_state, {\n                submitted: true,\n                loading: false,\n                form: _objectSpread({}, _state.form, {\n                  message: \"\"\n                })\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Box, {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Get Help\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Have a question? Fill out the form below to let us know how we can help.\")), React.createElement(Box, {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, _state.loading && React.createElement(Box, {\n    className: \"success-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Feedback received. Thanks!\")), _state.submitted && React.createElement(Box, {\n    className: \"success-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(SuccessIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Feedback received. Thanks!\")), !_state.submitted && !_state.loading && React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Name *\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Your Name\",\n    value: _state.form.name,\n    onChange: function onChange(e) {\n      return _state.form.name = e.target.value;\n    } // error={_state.errors.includes(\"name\") && !_state.form.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Email *\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email Address\",\n    value: _state.form.email,\n    onChange: function onChange(e) {\n      return _state.form.email = e.target.value;\n    } // error={_state.errors.includes(\"email\") && !EmailAddressRe.test(_state.form.email)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Message *\"), React.createElement(\"input\", {\n    type: \"textarea\",\n    placeholder: \"Write your message here\",\n    value: _state.form.message,\n    onChange: function onChange(e) {\n      return _state.form.message = e.target.value;\n    } // error={_state.errors.includes(\"message\") && !_state.form.message}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Button, {\n    disabled: _state.loading,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, _state.loading ? \"Sending...\" : \"Submit Message\"))), React.createElement(Box, {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.aarp.org/about-aarp/privacy-policy/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Privacy Policy\"))));\n});","map":{"version":3,"sources":["/Users/briandombrowski/Dev/Node/hookedjs/hookedjs/services/react/modules/ContactForm.tsx"],"names":["React","Box","Button","observable","reaction","set","toJS","observer","useObservable","isEmail","MobxPersist","SuccessIcon","LeadProfile","Loading","state","form","name","email","message","submitted","loading","errors","then","ContactForm","_state","onSubmit","e","preventDefault","optionalFields","filter","key","value","includes","map","push","length","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Button } from \"rebass\";\nimport { observable, reaction, set, toJS } from \"mobx\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport isEmail from 'validator/lib/isEmail';\n// import {Axios} from \"~/core/data/Axios\";\nimport { MobxPersist } from \"../polyfills/MobxPersist\";\nimport { SuccessIcon } from \"../primitives/SuccessIcon\";\nimport { LeadProfile } from \"../state/LeadProfile\";\nimport { Loading } from \"./Loading\";\n\nexport const state = observable({\n  form: {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  },\n  submitted: false,\n  loading: false,\n  errors: []\n});\nMobxPersist(\"ContactFormState\", state).then(() => {\n  // Keep form up to date with lead intel\n  set(state.form, { ...state.form, name: LeadProfile.name, email: LeadProfile.email });\n  reaction(() => toJS(LeadProfile), () => {\n    set(state.form, { ...state.form, name: LeadProfile.name, email: LeadProfile.email });\n  });\n});\n\nexport type props = {};\n\nexport const ContactForm = observer(({}: props) => {\n  const _state = useObservable(state);\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Cheap validation TODO: Implement full validation\n    const optionalFields: string[] = [];\n    let errors = Object.entries(_state.form)\n      .filter(([key, value]) => !value && !optionalFields.includes(key))\n      .map(([key, value]) => key);\n    if (!isEmail(_state.form.email)) errors.push(\"email\");\n    // @ts-ignore: Ingore unset type for now\n    if (errors.length) {_state.errors = errors; return;}\n    set(_state, { ..._state, errors: [], loading: true });\n\n    // Update LeadProfile\n    set(LeadProfile, { ...LeadProfile, name: _state.form.name, email: _state.form.email });\n\n    // TODO: post to api\n    // Axios.post(\"/feedback\", _state.form)\n    //   .then(function(response) {\n    //     set(_state, {\n    //       submitted: true,\n    //       loading: false,\n    //       form: {\n    //         ..._state.form,\n    //         message: \"\",\n    //         reason: \"\",\n    //       },\n    //     });\n    //   })\n    //   .catch(function(error) {\n    //     set(_state, {\n    //       loading: false,\n    //     });\n    //   });\n\n    set(_state, {\n      submitted: true,\n      loading: false,\n      form: {\n        ..._state.form,\n        message: \"\",\n      }\n    });\n  };\n\n  return (\n    <Box>\n      <Box className=\"header\">\n        <h3>Get Help</h3>\n        <p>Have a question? Fill out the form below to let us know how we can help.</p>\n      </Box>\n      <Box className=\"body\">\n        {_state.loading && (\n          <Box className=\"success-message\">\n            <Loading/>\n            <p>Feedback received. Thanks!</p>\n          </Box>\n        )}\n        {_state.submitted && (\n          <Box className=\"success-message\">\n            <SuccessIcon/>\n            <p>Feedback received. Thanks!</p>\n          </Box>\n        )}\n        {!_state.submitted && !_state.loading && (\n          <form onSubmit={onSubmit}>\n            <label>Name *</label>\n            <input\n              type=\"text\"\n              placeholder=\"Your Name\"\n              value={_state.form.name}\n              onChange={(e) => (_state.form.name = e.target.value)}\n              // error={_state.errors.includes(\"name\") && !_state.form.name}\n            />\n            <label>Email *</label>\n            <input\n              type=\"text\"\n              placeholder=\"Email Address\"\n              value={_state.form.email}\n              onChange={(e) => (_state.form.email = e.target.value)}\n              // error={_state.errors.includes(\"email\") && !EmailAddressRe.test(_state.form.email)}\n            />\n            <label>Message *</label>\n            <input\n              type=\"textarea\"\n              placeholder=\"Write your message here\"\n              value={_state.form.message}\n              onChange={(e) => (_state.form.message = e.target.value)}\n              // error={_state.errors.includes(\"message\") && !_state.form.message}\n            />\n            <Button\n              disabled={_state.loading}\n              onClick={onSubmit}\n            >\n              {_state.loading ? \"Sending...\" : \"Submit Message\"}\n            </Button>\n          </form>\n        )}\n      </Box>\n      <Box className=\"footer\">\n        <p>\n          <a href=\"https://www.aarp.org/about-aarp/privacy-policy/\" target=\"_blank\">\n            Privacy Policy\n          </a>\n        </p>\n      </Box>\n\n      {/*<style jsx>{`\n        .header {\n          border-bottom: 1px solid #ccc;\n        }\n        .header p {\n          margin: auto;\n          max-width: 300px;\n        }\n        .footer {\n          border-top: 1px solid #ccc;\n        }\n      `}</style>*/}\n    </Box>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}